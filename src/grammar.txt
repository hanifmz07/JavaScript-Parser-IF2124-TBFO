VAR_NAME -> __varname__
NUM -> __num__ | NUM DOT | DOT NUM | NUM DOT NUM | MINUS NUM
BIGINT -> __bigint__
STR -> __str__
BOOL -> true | false

PLUS -> __opunop__
MINUS -> __opunop__
DIV -> __op__
MUL -> __op__
MOD -> __op__
POW -> __op__
SHL -> __op__
SAR -> __op__
SHR -> __op__
INCR -> __incdec__
DECR -> __incdec__

BITWISE_NOT -> __unop__
BITWISE_AND -> __op__
BITWISE_OR -> __op__
BITWISE_XOR -> __op__
LOGICAL_NOT -> __unop__
LOGICAL_AND -> __op__
LOGICAL_OR -> __op__
LOGICAL_NULL -> __op__

LESS -> __comp__
GREATER -> __comp__
EQ -> __comp__
NOT_EQ -> __comp__
STRICT_EQ -> __comp__
STRICT_NOT_EQ -> __comp__
LE -> __comp__
GE -> __comp__

ASSIGN -> __assign__
MUL_ASSIGN -> __assign__
POW_ASSIGN -> __assign__
DIV_ASSIGN -> __assign__
MOD_ASSIGN -> __assign__
PLUS_ASSIGN -> __assign__
MINUS_ASSIGN -> __assign__
SHL_ASSIGN -> __assign__
SAR_ASSIGN -> __assign__
SHR_ASSIGN -> __assign__
BITWISE_AND_ASSIGN -> __assign__
BITWISE_XOR_ASSIGN -> __assign__
BITWISE_OR_ASSIGN -> __assign__
LOGICAL_AND_ASSIGN -> __assign__
LOGICAL_OR_ASSIGN -> __assign__
LOGICAL_NULL_ASSIGN -> __assign__

COLON -> :
SEMICOLON -> ;
COMMA -> ,
DOT -> .

OPEN_ROUND_BRACKET -> (
CLOSED_ROUND_BRACKET -> )
OPEN_SQUARE_BRACKET -> [
CLOSED_SQUARE_BRACKET -> ] 
OPEN_CURLY_BRACKET -> {
CLOSED_CURLY_BRACKET -> }

FALSE -> false
TRUE -> true

BREAK -> break
DEFAULT -> default
FOR -> for
RETURN -> return
VAR -> var
CONST -> const
DELETE -> delete
FUNCTION -> function
SWITCH -> switch
WHILE -> while
CASE -> case
ELSE -> else
IF -> if
THROW -> throw
CATCH -> catch
LET -> let
TRY -> try
CONTINUE -> continue
FINALLY -> finally
NULL -> null

OPERATOR -> PLUS | MINUS | DIV | MUL | MOD | POW | SHL | SAR | SHR | INCR | DECR | LESS | GREATER | EQ | NOT_EQ | STRICT_EQ | STRICT_NOT_EQ | LE | GE
UNARY_OP -> PLUS | MINUS | BITWISE_NOT | LOGICAL_NOT
ASSIGN_OP -> ASSIGN | MUL_ASSIGN | POW_ASSIGN | DIV_ASSIGN | MOD_ASSIGN | PLUS_ASSIGN | MINUS_ASSIGN | SHL_ASSIGN | SAR_ASSIGN | SHR_ASSIGN | BITWISE_AND_ASSIGN | BITWISE_XOR_ASSIGN | BITWISE_OR_ASSIGN | LOGICAL_AND_ASSIGN | LOGICAL_OR_ASSIGN | LOGICAL_NULL_ASSIGN
INCR_DECR_STMT -> INCR VAR_NAME | DECR VAR_NAME | VAR_NAME INCR | VAR_NAME DECR

EXP -> BIGINT | BOOL | STR | NUM | NULL | VAR_NAME | ARRAY | EXP_OP | VAR_NAME DOT METHOD_CALL | OBJECT_CALL | FUNCTION_CALL | INCR_DECR_STMT | UNARY_OP EXP | GET_ARRAY_ELMT
EXP_OP -> EXP OPERATOR EXP
EXPS -> EXP | EXP COMMA EXPS
ARRAY -> OPEN_SQUARE_BRACKET CLOSED_SQUARE_BRACKET | OPEN_SQUARE_BRACKET EXPS CLOSED_SQUARE_BRACKET
IDX_ARRAY_ELMT -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
IDX_ARRAY_ELMT_NEST -> IDX_ARRAY_ELMT | IDX_ARRAY_ELMT IDX_ARRAY_ELMTS
GET_ARRAY_ELMT -> VAR_NAME IDX_ARRAY_ELMTS
METHOD_CALL -> VAR_NAME OPEN_ROUND_BRACKETS CLOSE_ROUND_BRACKETS | VAR_NAME OPEN_ROUND_BRACKETS EXPS CLOSE_ROUND_BRACKETS

OBJECT_INIT -> OPEN_CURLY_BRACKET OBJECT_PROP CLOSED_CURLY_BRACKET
OBJECT_PROP -> VAR_NAME COLON EXP | VAR_NAME COLON EXP COMMA OBJECT_PROP
OBJECT_CALL -> VAR_NAME DOT VAR_NAME | VAR_NAME OPEN_SQUARE_BRACKET EXP CLOSED_SQUARE_BRACKET

MULTI_ASSIGN -> ASSIGN EXP | ASSIGN EXP MULTI_ASSIGN
ASSIGNMENT_CONST -> VAR_NAME MULTI_ASSIGN
ASSIGNMENT -> ASSIGNMENT_CONST | VAR_NAME
MULTI_ASSIGNMENT -> ASSIGNMENT | ASSIGNMENT COMMA MULTI_ASSIGNMENT
MULTI_ASSIGNMENT_CONST -> ASSIGNMENT_CONST | ASSIGNMENT_CONST COMMA MULTI_ASSIGNMENT_CONST
SIMPLE_ASSIGN -> VAR_NAME ASSIGN EXP SEMICOLON
CONST_ASSIGN -> CONST MULTI_ASSIGNMENT_CONST SEMICOLON
LET_ASSIGN -> LET MULTI_ASSIGNMENT SEMICOLON 
VAR_ASSIGN -> VAR MULTI_ASSIGNMENT SEMICOLON | VAR LET SEMICOLON | VAR LET MULTI_ASSIGN SEMICOLON
ASSIGNMENT_OP -> VAR_NAME ASSIGN_OP EXP SEMICOLON
ASSIGN_OBJ -> VAR_NAME ASSIGN OBJECT_INIT
ASSIGNMENTS -> SIMPLE_ASSIGN | CONST_ASSIGN | LET_ASSIGN | VAR_ASSIGN | ASSIGNMENT_OP | ASSIGN_OBJ

FUNCTION_INIT -> FUNCTION VAR_NAME OPEN_ROUND_BRACKET PARAM CLOSED_ROUND_BRACKET
PARAM -> VAR_NAME | VAR_NAME COMMA PARAM
FUNCTION_STMT -> FUNCTION_INIT SCOPE_PROGRAM
RETURN_STMT -> RETURN SEMICOLON | RETURN EXP SEMICOLON
FUNCTION_CALL -> VAR_NAME OPEN_ROUND_BRACKET EXPS CLOSED_ROUND_BRACKET

SCOPE_PROGRAM -> OPEN_CURLY_BRACKET BLOCK_PROGRAM CLOSED_CURLY_BRACKET

FOR_LOOP_HEAD -> INIT_FOR CONDITION SEMICOLON | INIT_FOR CONDITION SEMICOLON | INIT_FOR SEMICOLON EXP | SEMICOLON CONDITION SEMICOLON EXP | INIT_FOR SEMICOLON | SEMICOLON CONDITION SEMICOLON | SEMICOLON SEMICOLON EXP | SEMICOLON SEMICOLON
INIT_FOR -> LET_ASSIGN | VAR_ASSIGN
CONDITION -> EXP
FOR_LOOP -> FOR OPEN_ROUND_BRACKET FOR_LOOP_HEAD CLOSED_ROUND_BRACKET SCOPE_PROGRAM

WHILE_LOOP_HEAD -> WHILE OPEN_ROUND_BRACKET EXP CLOSED_ROUND_BRACKET
WHILE_LOOP -> WHILE_LOOP_HEAD SCOPE_PROGRAM

BREAK_STMT -> BREAK SEMICOLON
CONTINUE_STMT -> CONTINUE SEMICOLON

TRY_STMT -> TRY SCOPE_PROGRAM
CATCH_STMT -> CATCH OPEN_ROUND_BRACKET VAR_NAME CLOSED_ROUND_BRACKET SCOPE_PROGRAM | CATCH SCOPE_PROGRAM
FINAL_STMT -> FINALLY SCOPE_PROGRAM

TRY_CATCH_STMT -> TRY_STMT CATCH_STMT
TRY_CATCH_FINAL_STMT -> TRY_STMT CATCH_STMT FINAL_STMT
TRY_FINAL_STMT -> TRY_STMT FINAL_STMT

ALL_TRY_CATCH -> TRY_CATCH_STMT | TRY_CATCH_FINAL_STMT | TRY_FINAL_STMT

THROW_STMT -> THROW EXP SEMICOLON

SWITCH_HEAD -> SWITCH OPEN_ROUND_BRACKET EXP CLOSED_ROUND_BRACKET
SWITCH_EXP -> OPEN_CURLY_BRACKET CASE_EXPS CLOSED_CURLY_BRACKET | OPEN_CURLY_BRACKET CASE_EXPS DEFAULT_EXP CLOSED_CURLY_BRACKET | OPEN_CURLY_BRACKET DEFAULT_EXP CASE_EXPS CLOSED_CURLY_BRACKET |
OPEN_CURLY_BRACKET CASE_EXPS DEFAULT_EXP CASE_EXPS CLOSED_CURLY_BRACKET
SWITCH_STMT -> SWITCH_HEAD SWITCH_EXP
CASE_EXP -> CASE EXP COLON SCOPE_PROGRAM
CASE_EXPS -> CASE_EXP | CASE_EXP CASE_EXPS
DEFAULT_EXP -> DEFAULT EXP COLON SCOPE_PROGRAM

IF_HEAD -> IF OPEN_ROUND_BRACKET EXP CLOSED_ROUND_BRACKET
IF_EXP -> IF_HEAD SCOPE_PROGRAM
ELSEIF_HEAD -> ELSE IF OPEN_ROUND_BRACKET EXP CLOSED_ROUND_BRACKET
ELSEIF_EXP -> ELSEIF_HEAD SCOPE_PROGRAM
ELSEIF_EXPS -> ELSEIF_EXP | ELSEIF_EXP ELSEIF_EXPS
ELSE_EXP -> ELSE SCOPE_PROGRAM
CONDITIONAL_STMT -> IF_EXP | IF_EXP ELSE_EXP | IF_EXP ELSEIF_EXPS | IF_EXP ELSEIF_EXPS ELSE_EXP

BLOCK_PROGRAM -> CONDITIONAL_STMT | SWITCH_STMT | THROW_STMT | ALL_TRY_CATCH | BREAK_STMT | CONTINUE_STMT | WHILE_LOOP | FOR_LOOP | FUNCTION_STMT | RETURN_STMT | ASSIGNMENTS
S -> BLOCK_PROGRAM
